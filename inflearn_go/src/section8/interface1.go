//인터페이스 기본

package main


import "fmt"

type test interface{ //빈 인터페이스

}


func main()  {
	//객체의 동작을 표현, 골격
	//단순히 동작에 대한 방법만 표시
	//추상화 제공
	//go 언어를 유연하게 사용가능
	//덕 타이핑 : go언어의 독창적인 기능
	//디자인 패턴 측면에서, 메소드를 호출하는 client입장에선, 메소드의 구체적인 클래스를 몰라도 인터페이스에 정의된 메서드를 사용하는 객체 보장
	// 클래스(구조체)간의 결합도 감소 -> 유지보수성 향상, 기능 추가의 용이성 -> 독립적인 프로그래밍 가능


	//예제1
	/*
		type 인터페이스명 interface{
			메서드1() 반환값(타입 형)
			메서드2() //반환 값 없을 경우
		}
	*/

	var t test
	fmt.Println(t)
	
}